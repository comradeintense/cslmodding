---
const sidebarItems = [
	{
		category: 'ASSET CREATION',
		items: [
			{ name: 'Building', href: '/asset/building/' },
			{ name: 'Prop', href: '/asset/prop/' },
			{ name: 'Tree', href: '/asset/tree' },
			{ name: 'Vehicle', href: '/asset/vehicle' },
			{ name: 'Citizen', href: '/asset/citizen' },
			{ name: 'Network', href: '/asset/network' },
			{ name: 'Theme', href: '/theme' },
			{ name: 'LUT', href: '/lut' },
		],
	},

	{
		category: 'BASIC',
		items: [
			{ name: 'No Workshop', href: '/noworkshop' },
			{ name: 'Normal Maps', href: '/normal-maps' },
			{ name: 'Scale', href: '/scale' },
		],
	},
	{
		category: 'MODTOOLS',
		items: [
			{ name: 'ModTools', href: '/modtools' },
			{ name: 'Scripts', href: '/scripts' },
			{ name: 'Dump Assets', href: '/dump' },
			{ name: 'Writing Scripts', href: '/scripting' },
		],
	},
	{
		category: 'SHADERS',
		items: [
			{ name: 'Decal', href: '/shader/decal' },
			{ name: 'Rotors Props & Buildings', href: '/shader/rotors' },
			{ name: 'Rotors Vehicle Glass', href: '/shader/rotors-vehicle' },
			{ name: 'Rotors Propellers', href: '/shader/rotors-propellers' },
			{ name: 'AnimUV', href: '/shader/animuv' },
			{ name: 'PropRotating', href: '/shader/proprotating' },
			{ name: 'Flag', href: '/shader/flag' },
			{ name: 'Vehicle Wheels', href: '/shader/vehicle-wheels' },
		],
	},
	{
		category: 'MOD-SPECIFIC',
		items: [
			{ name: 'Ploppable Asphalt +', href: '/mod/ploppable-asphalt' },
			{ name: 'Additive Shader', href: '/mod/additive-shader' },
			{ name: 'Custom Animation Loader', href: '/mod/custom-animation-loader' },
			{ name: 'Custom Effect Loader', href: '/mod/custom-effect-loader' },
			{ name: 'Detail', href: '/mod/detail' },
		],
	},
	{
		category: 'OTHER',
		items: [
			{ name: 'Tutorials', href: '/tutorials' },
			{ name: 'Source Files', href: '/files' },
			{ name: 'Output Log Decrufter', href: '/decruft' },
			{ name: 'Search', href: '/search' },
			{ name: 'About', href: '/about' },
		],
	},
];
---

<button
	data-drawer-target="separator-sidebar"
	data-drawer-toggle="separator-sidebar"
	aria-controls="separator-sidebar"
	type="button"
	class="inline-flex items-center p-1 mt-4 text-sm text-gray-500 rounded-lg sm:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200"
>
	<span class="sr-only">Open sidebar</span>
	<svg class="w-6 h-6" aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
		<path
			clip-rule="evenodd"
			fill-rule="evenodd"
			d="M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z"
		></path>
	</svg>
</button>

<aside id="separator-sidebar" class="fixed top-0 left-0 z-40 w-64 h-screen transition-transform -translate-x-full sm:translate-x-0" aria-label="Sidebar">
	<!-- !sidebar -->
	<div class="h-full px-6 pb-4 pt-4 overflow-y-auto bg-lightbg">
		<!-- !wrapper for the menu and button -->
		<div class="sm:hidden flex items-center justify-between pb-2 mb-4 border-b border-b-gray-700">
			<span class="text-subtitle font-bold">Menu</span>
			<!-- ?Close button for small screens -->
			<button
				id="close-sidebar"
				class="block p-1 text-hit-gray-100 hover:bg-gray-100 hover:text-hit-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-lg"
			>
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
					<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"></path>
				</svg>
			</button>
		</div>
		<ul>
			<li>
				<a href="#" class="inline-flex py-2 text-subtitle rounded-lg hover:text-hoverlink group">
					<span>Cities: Skylines I Modding</span>
				</a>
			</li>
			<li>
				<a href="#" class="inline-flex text-subtitle rounded-lg hover:text-hoverlink group">
					<span>Cities: Skylines II Modding</span>
				</a>
			</li>
			{
				sidebarItems.map(({ category, items }) => (
					<div class="mt-6">
						<span class="text-hit-gray-500 text-[.875rem] leading-[1.75rem] mb-2">{category}</span>
						<ul>
							{items.map((item) => (
								<li class="mt-1">
									<a class="text-hit-gray-200 text-[1rem] leading-[1.25rem] inline-flex ps-2 rounded-md hover:text-hoverlink group" href={item.href}>
										{item.name}
									</a>
								</li>
							))}
						</ul>
					</div>
				))
			}
		</ul>
	</div>

	<script>
		// Select the toggle button, close button, and sidebar elements
		const toggleButton = document.querySelector('[data-drawer-toggle="separator-sidebar"]');
		const closeButton = document.getElementById('close-sidebar');
		const sidebar = document.getElementById('separator-sidebar');

		// Function to toggle the sidebar
		function toggleSidebar() {
			sidebar.classList.toggle('-translate-x-full');
			sidebar.classList.toggle('translate-x-0');
		}

		// Add click event listeners
		toggleButton.addEventListener('click', toggleSidebar);
		closeButton.addEventListener('click', toggleSidebar);
	</script>
</aside>
